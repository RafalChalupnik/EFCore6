// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PublisherData;

#nullable disable

namespace PublisherData.Migrations
{
    [DbContext(typeof(PetContext))]
    [Migration("20220615174802_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PublisherDomain.Human", b =>
                {
                    b.Property<int>("HumanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HumanId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HumanId");

                    b.ToTable("Humans");

                    b.HasData(
                        new
                        {
                            HumanId = 1,
                            Name = "Rafał"
                        });
                });

            modelBuilder.Entity("PublisherDomain.Pet", b =>
                {
                    b.Property<int>("PetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PetId"), 1L, 1);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("HumanId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PetId");

                    b.HasIndex("HumanId");

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("PublisherDomain.Cat", b =>
                {
                    b.HasBaseType("PublisherDomain.Pet");

                    b.Property<int>("Meows")
                        .HasColumnType("int");

                    b.ToTable("Cats", (string)null);

                    b.HasData(
                        new
                        {
                            PetId = 2,
                            DateOfBirth = new DateTime(2019, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HumanId = 1,
                            Name = "Lily",
                            Meows = 3
                        },
                        new
                        {
                            PetId = 3,
                            DateOfBirth = new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HumanId = 1,
                            Name = "Beza",
                            Meows = 2
                        });
                });

            modelBuilder.Entity("PublisherDomain.Dog", b =>
                {
                    b.HasBaseType("PublisherDomain.Pet");

                    b.Property<decimal>("BarkDecibels")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable("Dogs", (string)null);

                    b.HasData(
                        new
                        {
                            PetId = 1,
                            DateOfBirth = new DateTime(2010, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HumanId = 1,
                            Name = "Bessi",
                            BarkDecibels = 70.3m
                        });
                });

            modelBuilder.Entity("PublisherDomain.Pet", b =>
                {
                    b.HasOne("PublisherDomain.Human", null)
                        .WithMany("Pets")
                        .HasForeignKey("HumanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PublisherDomain.Cat", b =>
                {
                    b.HasOne("PublisherDomain.Pet", null)
                        .WithOne()
                        .HasForeignKey("PublisherDomain.Cat", "PetId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PublisherDomain.Dog", b =>
                {
                    b.HasOne("PublisherDomain.Pet", null)
                        .WithOne()
                        .HasForeignKey("PublisherDomain.Dog", "PetId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PublisherDomain.Human", b =>
                {
                    b.Navigation("Pets");
                });
#pragma warning restore 612, 618
        }
    }
}
